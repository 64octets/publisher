<%= render :partial => 'buttons' %>

<div id="guide-nav" class="tabs">
  <ul>
    <li><a href="#new">In Progress (<%= @drafts.length %>)</a></li>
    <li><a href="#review-requested">Review Requested (<%= @review_requested.length %>)</a></li>
    <li><a href="#published">Published (<%= @published.length %>)</a></li>
    <li><a href="#archive">Archive</a></li>
  </ul>

  <div id="new">
    <table class="formats" summary="List of &ldquo;In Progress&rdquo; content">
      <thead>
        <tr>
          <th scope="col">Format</th>
          <th scope="col">Title</th>
          <th scope="col">Last Updated</th>
          <th scope="col">Created By</th>
          <th scope="col">Delete</th>
          <th scope="col">Edit</th>
          <th scope="col">Preview</th>
        </tr>
      </thead>
      <tbody>
        <%= render :collection => @drafts, :partial => 'publication', :locals => {:tab => :drafts} %>
      </tbody>
    </table>
  </div>
  <div id="review-requested">
     <table class="formats" summary="List of &ldquo;Review Requested&rdquo; content">
       <thead>
         <tr>
           <th scope="col">Format</th>
           <th scope="col">Title</th>
           <th scope="col">Last Updated</th>
           <th scope="col">Created By</th>
           <th scope="col">Delete</th>
           <th scope="col">Edit</th>
           <th scope="col">Preview</th>
         </tr>
       </thead>
       <tbody>
         <%= render :collection => @review_requested, :partial => 'publication', :locals => {:tab => :review_requested}  %>
       </tbody>
     </table>
   </div>
  <div id="published">
    <table class="formats" summary="List of &ldquo;Published&rdquo; content">
        <tr>
          <th scope="col">Format</th>
          <th scope="col">Title</th>
          <th scope="col">Last Updated</th>
          <th scope="col">Created By</th>
          <th scope="col">Published By</th>
          <th scope="col">View</th>
          <th scope="col">Delete</th>
          <th scope="col">Edit</th>
          <th scope="col">Preview</th>
        </tr>
      </thead>
      <tbody>
        <%= render :collection => @published, :partial => 'publication', :locals => {:tab => :published}  %>
      </tbody>
    </table>
  </div>
  <div id="archive">
    <table class="formats" summary="List of &ldquo;Local&rdquo; content">
      <thead>
        <tr>
          <th scope="col">Format</th>
          <th scope="col">Title</th>
          <th scope="col">Last Updated</th>
          <th scope="col">Created By</th>
          <th scope="col">Delete</th>
          <th scope="col">Edit</th>
          <th scope="col">Preview</th>
        </tr>
      </thead>
      <tbody>
        <%= render :collection => @archived, :partial => 'publication', :locals => {:tab => :archived}  %>
      </tbody>
    </table>
  </div>

</div>

<%= render :partial => 'buttons' %>

<% content_for :extra_javascript do %>
<script type="text/javascript">
$(function () { $('#guide-nav').tabs(); });

var myTextExtraction = function(node) {
  var the_node = $(node);
  var image = the_node.find('img');
  if (image.length > 0) {
    return image.attr('alt');
  } else {
    return the_node.text();
  }
}

$(document).ready(function() {
  $(".formats").tablesorter({
    textExtraction: myTextExtraction,
    headers: {
      // disable sorting for last three columns
      4: { sorter: false },
      5: { sorter: false },
      6: { sorter: false }
     }
   });

  var tabbable = $('#guide-nav'),
    tab_links = tabbable.find('ul.ui-tabs-nav a');
  
  if ('pushState' in window.history) {
    // Define our own click handler for the tabs, overriding the default.
    tabbable.tabs({ event: 'change' }); 
    
    tab_links.click(function() {
      var the_element = $(this),
        state = {},
        // Get the id of this tab widget.
        id = the_element.closest( '.tabs' ).attr('id'),
        title = the_element.text(),
        anchor = the_element.attr('href'),
        // Get the index of this tab.
        idx = $(this).parent().prevAll().length;

      // Set the state!
      state[id] = idx;
      window.history.pushState(state, title, document.location.pathname + anchor);
      $(window).trigger('hashchange');
    });

    // Bind an event to window.onhashchange that, when the history state changes, 
    // change the current tab as necessary.
    $(window).bind('hashchange', function(e) {
      if (history.state) {
        var idx = history.state[tabbable.attr('id')];
        tab_links.eq( idx ).triggerHandler( 'change' );
      }
    })

    // Since the event is only triggered when the hash changes, we need to trigger
    // the event now, to handle the hash the page may have loaded with.
    $(window).trigger('hashchange');
  } else {
    tabbable.tabs(); 
  }
});
</script>
<% end %>
<% content_for :page_title, "Publications dashboard" %>