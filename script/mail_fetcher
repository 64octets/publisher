#!/usr/bin/env ruby

# Check all emails in the gmail inbox. Find any sent to an address matching the pattern
# factcheck+{rails_environment}-#{publication_id}@alphagov.co.uk
#
# Any messages successfully processed will be moved out of the inbox. Others are left
# there, so we can review that messages are getting processed properly by going into the
# gmail account and having a look.
#
require File.expand_path('../../config/environment',  __FILE__)
require File.expand_path("../../lib/lockfile_ext", __FILE__)

class FactCheckEmailHandler
  attr_accessor :errors
  attr_accessor :message_processor

  def initialize(processor = FactCheckMessageProcessor)
    errors = []
    message_processor = processor
  end
  
  def process(message, imap, message_id)
    Mail.all(:delete_after_find => true) do |message, imap, message_id|
      begin
        if message.to.any? { |to| to.match(/factcheck\+#{Plek.current.environment}-(.+?)@alphagov.co.uk/) }
          processor = message_processor.new(message, imap, message_id)
          next if processor.process($1)
        end

        message.skip_deletion
      rescue => e
        errors << "Failed to process message #{message.subject}: #{e.message}"
      end
    end
  end
end

begin
  Lockfile.new('cron_mail_fetcher.lock', :retries => 0) do
    require 'mail'
    require Rails.root.join("config/fact_check_account")
    require 'fact_check_message_processor'

    Rails.logger.info "Running MailFetcher in #{Rails.env} mode"

    handler = FactCheckEmailHandler.new
    handler.process
    
    if handler.errors.any?
      Mail.deliver do
        from    'winston@alphagov.co.uk'
        to      'dev@alphagov.co.uk'
        subject 'Errors in fact check email processing'
        body    errors.join("\n")
      end
    end

    Rails.logger.info "Finished running MailFetcher in #{Plek.current.environment} mode"
  end
rescue Lockfile::MaxTriesLockError => e
  Rails.logger.info "Another email fetcher is already running. Exiting."
end
